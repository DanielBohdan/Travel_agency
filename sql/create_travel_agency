create database travel_agencyDB;
use travel_agencyDB;

CREATE TABLE IF NOT EXISTS travel_agencyDB.type_tour
(
    id      INT         NOT NULL AUTO_INCREMENT primary key unique,
    name_en VARCHAR(40) NOT NULL,
    name_ru VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS travel_agencyDB.country
(
    id      INT         NOT NULL AUTO_INCREMENT primary key unique,
    name_en VARCHAR(40) NOT NULL,
    name_ru VARCHAR(40) NOT NULL
);

CREATE TABLE IF NOT EXISTS travel_agencyDB.tour
(
    id           INT         NOT NULL AUTO_INCREMENT primary key unique,
    name_en      VARCHAR(40) NOT NULL,
    name_ru      VARCHAR(40) NOT NULL,
    desc_en      VARCHAR(40) NOT NULL,
    desc_ru      VARCHAR(40) NOT NULL,
    price        FLOAT       NOT NULL,
    count_people INT         NOT NULL,
    mark_hotel   INT         NOT NULL,
    start_date   DATE        NOT NULL,
    days         INT         NOT NULL,
    discount     float       NULL,
    type_tour_id INT         NOT NULL,
    country_id   INT         NOT NULL,
    FOREIGN KEY (type_tour_id) REFERENCES type_tour (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    FOREIGN KEY (country_id) REFERENCES country (id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS travel_agencyDB.role
(
    id   INT         NOT NULL AUTO_INCREMENT primary key unique,
    name VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS travel_agencyDB.user
(
    id           INT         NOT NULL AUTO_INCREMENT primary key unique,
    username     VARCHAR(45) NOT NULL,
    login        VARCHAR(40) NOT NULL unique,
    password     VARCHAR(24) NOT NULL,
    phone_number VARCHAR(13) NOT NULL,
    status       boolean     NOT NULL,
    role_id      INT         NOT NULL,
    FOREIGN KEY (role_id) REFERENCES role (id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS travel_agencyDB.order
(
    id       INT                                     NOT NULL AUTO_INCREMENT primary key unique,
    status   ENUM ('registered', 'paid', 'canceled') NOT NULL,
    date_reg DATETIME                                NOT NULL,
    tour_id  INT                                     NOT NULL,
    user_id  INT                                     NOT NULL,
    FOREIGN KEY (tour_id) REFERENCES tour (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    FOREIGN KEY (user_id) REFERENCES user (id) ON DELETE CASCADE ON UPDATE RESTRICT
);