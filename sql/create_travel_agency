create database travelagencyDB;
use travelagencyDB;

CREATE TABLE IF NOT EXISTS travelagencyDB.type_tour
(
    id   INT         NOT NULL AUTO_INCREMENT PRIMARY KEY unique,
    name VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS travelagencyDB.country
(
    id   INT         NOT NULL AUTO_INCREMENT PRIMARY KEY unique,
    name VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS travelagencyDB.tour
(
    id           INT         NOT NULL AUTO_INCREMENT primary key unique,
    name         VARCHAR(45) NOT NULL,
    price        FLOAT       NOT NULL,
    count_people INT         NOT NULL,
    description  TEXT        NULL,
    mark_hotel   INT         NOT NULL,
    start_date   VARCHAR(45) NOT NULL,
    days         INT         NOT NULL,
    discount     float       NULL,
    type_tour_id INT         NOT NULL REFERENCES type_tour (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    country_id   INT         NOT NULL REFERENCES country (id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS travelagencyDB.role
(
    id   INT         NOT NULL AUTO_INCREMENT primary key unique,
    name VARCHAR(45) NOT NULL
);

CREATE TABLE IF NOT EXISTS travelagencyDB.user
(
    id           INT          NOT NULL AUTO_INCREMENT primary key unique,
    username     VARCHAR(45)  NOT NULL,
    password     VARCHAR(24)  NOT NULL,
    email        VARCHAR(225) NOT NULL unique,
    phone_number VARCHAR(13)  NOT NULL,
    status       boolean      NOT NULL,
    role_id      INT          NOT NULL REFERENCES role (id) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE IF NOT EXISTS travelagencyDB.order
(
    id      INT                                     NOT NULL AUTO_INCREMENT primary key unique,
    status  ENUM ('registered', 'paid', 'canceled') NOT NULL,
    tour_id INT                                     NOT NULL REFERENCES tour (id) ON DELETE CASCADE ON UPDATE RESTRICT,
    user_id INT                                     NOT NULL REFERENCES user (id) ON DELETE CASCADE ON UPDATE RESTRICT
);